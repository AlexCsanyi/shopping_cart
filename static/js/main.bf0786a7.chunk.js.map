{"version":3,"sources":["utils/currency.js","components/listings.js","components/filter.js","components/popup.js","components/basket.js","App.js","serviceWorker.js","index.js"],"names":["num","Number","toFixed","toLocaleString","Listings","cartItems","this","props","counts","map","count","ids","id","listItems","items","item","className","key","src","img","alt","name","currency","price","onClick","e","handleRemoveFromCart","indexOf","handleDeleteFromCart","handleAddToCart","Component","Filter","options","Set","colour","value","defaultValue","onChange","handleChangeColour","Popup","closePopup","Basket","state","showPopup","setState","total","reduce","accumulator","length","togglePopup","bind","text","App","filteredItems","isLoaded","fetch","then","res","json","localStorage","getItem","JSON","parse","target","filter","a","productAlreadyInCart","forEach","product","push","setItem","stringify","splice","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bf0786a7.chunk.js","sourcesContent":["export default {\r\n  formatCurrency: function(num) {\r\n    return \"Â£\" + Number(num.toFixed(2)).toLocaleString() + \" GBP\";\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./listings.css\";\r\nimport { FaPlusCircle, FaMinusCircle } from \"react-icons/fa\";\r\nimport currency from \"../utils/currency\";\r\n\r\nexport default class Listings extends Component {\r\n  render() {\r\n    const { cartItems } = this.props;\r\n    const counts = cartItems.map(count => count.count);\r\n    const ids = cartItems.map(id => id.id);\r\n    const listItems = this.props.items.map(item => (\r\n      <li className=\"product-listing--item\" key={item.id}>\r\n        <div className=\"product-listing--item-detail-container\">\r\n          <img\r\n            className=\"product-listing--item-img\"\r\n            src={item.img}\r\n            alt={item.name}\r\n          ></img>\r\n          <div className=\"product-listing--item-description-container\">\r\n            <h3 className=\"product-listing--item-title\">{item.name}</h3>\r\n            <p className=\"product-listing--item-price\">\r\n              {currency.formatCurrency(item.price)}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"product-listing--qty-ctrl-container\">\r\n          <div className=\"product-listing--qty-ctrl\">\r\n            <FaMinusCircle\r\n              onClick={e => this.props.handleRemoveFromCart(e, item)}\r\n              className=\"product-listing--qty-icon\"\r\n            ></FaMinusCircle>\r\n            <div className=\"product-listing--qty\">\r\n              <h3 className=\"product-listing--qty-ctrl-qty\">\r\n                {ids.indexOf(item.id) > -1 ? counts[ids.indexOf(item.id)] : \"0\"}\r\n              </h3>\r\n              <p\r\n                onClick={e => this.props.handleDeleteFromCart(e, item)}\r\n                className=\"product-listing--qty-ctrl-remove\"\r\n              >\r\n                REMOVE\r\n              </p>\r\n            </div>\r\n            <FaPlusCircle\r\n              onClick={e => this.props.handleAddToCart(e, item)}\r\n              className=\"product-listing--qty-icon\"\r\n            ></FaPlusCircle>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"main-container\">\r\n        <ul className=\"product-listing\">{listItems}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./filter.css\";\r\n\r\nexport default class Filter extends Component {\r\n  render() {\r\n    const colours = [...new Set(this.props.items.map(item => item.colour))];\r\n    const options = colours.map(colour => (\r\n      <option key={colour} value={colour}>\r\n        {colour}\r\n      </option>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"filter-container\">\r\n        <label>\r\n          Filter by colour{\" \"}\r\n          <select\r\n            className=\"color-form-control\"\r\n            defaultValue={this.props.colour}\r\n            onChange={this.props.handleChangeColour}\r\n          >\r\n            <option value=\"\">ALL</option>\r\n            {options}\r\n          </select>\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./popup.css\";\r\n\r\nexport default class Popup extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"popup\">\r\n        <div className=\"popup_inner\">\r\n          <h1>Thank You for shopping at PrettyLittleThing</h1>\r\n          <button className=\"popup-close-btn\" onClick={this.props.closePopup}>\r\n            Go Back & Shop More\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./basket.css\";\r\nimport currency from \"../utils/currency\";\r\nimport Popup from \"./popup.js\";\r\n\r\nexport default class Basket extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showPopup: false\r\n    };\r\n  }\r\n\r\n  togglePopup() {\r\n    this.setState({\r\n      showPopup: !this.state.showPopup\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { cartItems } = this.props;\r\n    const prices = cartItems.map(item => item.count * item.price);\r\n    const reducer = (accumulator, item) => {\r\n      return accumulator + item;\r\n    };\r\n    const total = prices.reduce(reducer, 0);\r\n    return (\r\n      <div className=\"cart-container\">\r\n        <div className=\"total-container\">\r\n          <span>TOTAL: {currency.formatCurrency(total)}</span>\r\n          <p>\r\n            {cartItems.length === 0 ? (\r\n              \"Basket is empty\"\r\n            ) : (\r\n              <span>\r\n                You have {cartItems.length}{\" \"}\r\n                {cartItems.length === 1\r\n                  ? \"type of product\"\r\n                  : \"different types of products\"}{\" \"}\r\n                in your basket\r\n              </span>\r\n            )}\r\n          </p>\r\n          {total > 0 ? (\r\n            <button\r\n              onClick={this.togglePopup.bind(this)}\r\n              className=\"button-checkout\"\r\n            >\r\n              Check Out\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {this.state.showPopup ? (\r\n            <Popup\r\n              text=\"Close Me\"\r\n              closePopup={this.togglePopup.bind(this)}\r\n            ></Popup>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport Listings from \"./components/listings\";\nimport Filter from \"./components/filter\";\nimport Basket from \"./components/basket\";\nimport \"./app.css\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      filteredItems: [],\n      cartItems: [],\n      isLoaded: false\n    };\n    this.handleChangeColour = this.handleChangeColour.bind(this);\n    this.handleAddToCart = this.handleAddToCart.bind(this);\n    this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this);\n    this.handleDeleteFromCart = this.handleDeleteFromCart.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://my-json-server.typicode.com/benirvingplt/products/products\")\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json,\n          filteredItems: json\n        });\n      });\n    if (localStorage.getItem(\"cartItems\")) {\n      this.setState({\n        cartItems: JSON.parse(localStorage.getItem(\"cartItems\"))\n      });\n    }\n  }\n\n  handleChangeColour(e) {\n    this.setState({ colour: e.target.value });\n    this.listItems();\n  }\n\n  listItems() {\n    this.setState(state => {\n      if (state.colour !== \"\") {\n        return {\n          filteredItems: state.items.filter(a => a.colour === state.colour)\n        };\n      } else {\n        return { filteredItems: state.items };\n      }\n    });\n  }\n\n  handleAddToCart(e, item) {\n    this.setState(state => {\n      const cartItems = state.cartItems;\n      let productAlreadyInCart = false;\n      cartItems.forEach(product => {\n        if (product.id === item.id) {\n          productAlreadyInCart = true;\n          product.count++;\n        }\n      });\n      if (!productAlreadyInCart) {\n        cartItems.push({ ...item, count: 1 });\n      }\n      localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n      return cartItems;\n    });\n  }\n\n  handleRemoveFromCart(e, item) {\n    this.setState(state => {\n      const cartItems = state.cartItems;\n      cartItems.forEach(product => {\n        if (product.id === item.id) {\n          if (product.count > 0) {\n            product.count--;\n            if (product.count === 0) {\n              cartItems.splice(cartItems.indexOf(product), 1);\n            }\n          }\n        }\n      });\n      localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n      return cartItems;\n    });\n  }\n\n  handleDeleteFromCart(e, item) {\n    this.setState(state => {\n      const cartItems = state.cartItems;\n      cartItems.forEach(product => {\n        if (product.id === item.id) {\n          cartItems.splice(cartItems.indexOf(product), 1);\n        }\n      });\n      localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n      return cartItems;\n    });\n  }\n\n  render() {\n    var { isLoaded } = this.state;\n\n    if (!isLoaded) {\n      return (\n        <div className=\"loading\">\n          <h1>PrettyLittleThing</h1>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Filter\n            items={this.state.items}\n            colour={this.state.colour}\n            handleChangeColour={this.handleChangeColour}\n          ></Filter>\n          <Listings\n            items={this.state.filteredItems}\n            handleAddToCart={this.handleAddToCart}\n            handleRemoveFromCart={this.handleRemoveFromCart}\n            handleDeleteFromCart={this.handleDeleteFromCart}\n            cartItems={this.state.cartItems}\n          ></Listings>\n          <Basket cartItems={this.state.cartItems}></Basket>\n        </div>\n      );\n    }\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}